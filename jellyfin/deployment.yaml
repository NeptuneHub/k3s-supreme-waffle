apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config-pvc
  namespace: <put your namespace>
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache-pvc
  namespace: <put your namespace>
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: <put your namespace>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: lscr.io/linuxserver/jellyfin:latest #ghcr.io/jellyfin/jellyfin:2024080505-arm64 #lscr.io/linuxserver/jellyfin:latest
        ports:
        - containerPort: 8096
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: FFMPEG_PATH
          value: "/usr/lib/jellyfin-ffmpeg/ffmpeg"
        resources:
          requests:
            #intel.com/gpu: 1
            cpu: 500m
            memory: 512Mi
          limits:
            #intel.com/gpu: 1
            cpu: 2
            memory: 8Gi
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /cache
          name: cache
        - mountPath: /media
          name: media
        - mountPath: /dev/dri
          name: render
        - mountPath: /usr/lib/jellyfin-ffmpeg
          name: jellyfin-ffmpeg-bin
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config-pvc
      - name: cache
        persistentVolumeClaim:
          claimName: jellyfin-cache-pvc
      - name: media
        persistentVolumeClaim:
          claimName: servarr-pvc <put the PVC of your media>
      - name: render
        hostPath:
          path: /dev/dri
          type: Directory
      - name: jellyfin-ffmpeg-bin
        hostPath:
          path: /usr/lib/jellyfin-ffmpeg
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: <put your namespace>
spec:
  selector:
    app: jellyfin
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8096
  type: ClusterIP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: jellyfin-ingressroute
  namespace: servarr
spec:
  entryPoints:
    - web #websecure
  routes:
    - match: Host(`jellyfin.192.168.3.131.nip.io`)
      kind: Rule
      services:
        - name: jellyfin
          port: 80
